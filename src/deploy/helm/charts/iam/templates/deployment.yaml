apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "iam.fullname" . }}
  labels:
    {{- include "iam.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "iam.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "iam.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "iam.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: {{ include "iam.fullname" . }}-credentials
                  key: admin_username
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "iam.fullname" . }}-credentials
                  key: admin_password
            - name: KC_HOSTNAME
              value: {{ .Values.ingress.host }}
            {{- if .Values.global.postgres.enabled }}
            - name: KC_DB
              value: postgres
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  key: db_username
                  name: {{ include "iam.fullname" . }}-credentials
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: db_password
                  name: {{ include "iam.fullname" . }}-credentials
            - name: KC_DB_URL
              value: {{ printf "jdbc:postgresql://%s:%s/iam" (include "postgres.service.name" . ) (include "postgres.service.port" . ) | quote }}
            {{- end }}

          volumeMounts:
            - mountPath: /opt/keycloak/data/import
              name: realm-data
          args:
            - "start"
            - "--import-realm"
            - "--hostname-strict-https=false"
            - "--http-enabled=true"
            - "--proxy=edge"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - configMap:
            items:
              - key: realm-mastersofjava.json
                path: realm-mastersofjava.json
            name: {{ include "iam.fullname" . }}-config
          name: realm-data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
